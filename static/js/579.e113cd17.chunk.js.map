{"version":3,"file":"static/js/579.e113cd17.chunk.js","mappings":"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","sources":["components/notFoundCoffee/NotFoundCoffee.js","components/pages/CoffeeItemPage.js","components/pages/Server.js","components/subheader/Subheader.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport Img404 from \"../../assets/img/404.jpg\";\r\n\r\nconst NotFoundCoffee = ({ selector = \"coffee_not_found\", visibleLink = true }) => {\r\n  return (\r\n    <>\r\n      <h2 className=\"coffee_not_found_title\">Sorry we didn't find coffee. Try later</h2>\r\n      {visibleLink ? (\r\n        <Link to=\"/coffee-shop\">\r\n          <button className=\"page_not_found_text\">Back to main page</button>\r\n        </Link>\r\n      ) : null}\r\n\r\n      <img className={selector} src={Img404} alt=\"coffee not found\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotFoundCoffee;\r\n","import { Helmet } from \"react-helmet\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { FetchJson } from \"./Server\";\r\n// import { CoffeeAPI } from \"./Server\";\r\nimport Subheader from \"../subheader/Subheader\";\r\nimport NotFoundCoffee from \"../notFoundCoffee/NotFoundCoffee\";\r\nimport Spinner from \"../spinner/Spinner\";\r\n\r\nimport imgNotFound from \"../../assets/img/img_not_found.jpg\";\r\n\r\nimport \"../../assets/sass/style.sass\";\r\nimport \"./coffeeItemPage.sass\";\r\n\r\nimport coffeeBeans from \"../../assets/icons/main_page_coffee_beans.png\";\r\n\r\nconst CoffeeItemSinglePage = () => {\r\n  //const [coffeeItem, setCoffeeItem] = useState(null);\r\n  const [coffeeInServer, setCoffeeInServer] = useState(null);\r\n  const [filter, setFilter] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  console.log(filter);\r\n  // const coffeePrices = ['1.29$', \"2.30$\", '3.10$', '1.99$', '2.00$','1.69$', '3.10$', '4.99$', '2.49$', '1.99$', '2.20$', '2.99$', '3.99$', '2.59$', '2.99$', '3.49$', '2.10$', '1.49$', '2.30$', '4.29$'];\r\n\r\n  const getCoffeeItems = async () => {\r\n    // await CoffeeAPI(setCoffeeItem, setLoading);\r\n    FetchJson(setCoffeeInServer, setLoading, \"http://localhost:3000/coffee-shop/db.json\");\r\n  };\r\n\r\n  // const updateCoffeeDataFromAPI = () => {\r\n  //   if (coffeeItem) {\r\n  //     // eslint-disable-next-line array-callback-return\r\n  //     coffeeItem.map((item, i) => {\r\n  //       item.price = coffeePrices[i]\r\n  //       item.quantity = 1\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n  let url = +document.location.pathname.replace(/\\//g, \"\").replace(/\\D/g, \"\");\r\n\r\n  const getRightItem = () => {\r\n    // updateCoffeeDataFromAPI();\r\n    // let filteredOne = coffeeItem ? coffeeItem.filter(coffee => coffee.id === url) : null\r\n    let filteredCoffee = coffeeInServer\r\n      ? coffeeInServer.filter((coffee) => coffee.id === url)\r\n      : null;\r\n\r\n    if (filteredCoffee && filteredCoffee.length) {\r\n      setFilter(filteredCoffee);\r\n    }\r\n    // else if (filteredOne && filteredOne.length) {\r\n    //   setFilter(filteredOne)\r\n    // }\r\n  };\r\n\r\n  const replaceImage = (error) => (error.target.src = imgNotFound);\r\n\r\n  useEffect(() => {\r\n    getCoffeeItems();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getRightItem();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [coffeeInServer]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta name=\"description\" content=\"App made by my own. I using here React.\" />\r\n        <title>{filter ? filter[0].title : null}</title>\r\n      </Helmet>\r\n\r\n      <Subheader subheaderBG={\"subheader_our_coffee\"} subheaderTitle=\"Our Coffee\" />\r\n      {loading ? (\r\n        <Spinner selectorId=\"preloader_for_items\" />\r\n      ) : !filter ? (\r\n        <NotFoundCoffee selector=\"coffee_not_found_center\" />\r\n      ) : (\r\n        <section className=\"coffee_item_main\">\r\n          <div className=\"coffee_item_main_flex\">\r\n            <img\r\n              className=\"coffee_page_item_img\"\r\n              src={filter && filter[0].image !== null ? filter[0].image : imgNotFound}\r\n              onError={replaceImage}\r\n              alt=\"our coffee\"\r\n            />\r\n\r\n            <div className=\"about_our_beans_description\">\r\n              <h2 className=\"content_title\">{filter ? filter[0].title : null}</h2>\r\n              <div className=\"flex_wrapper_beans\">\r\n                <div className=\"flex_beans coffee_item_mb25\">\r\n                  <div className=\"left_line\"></div>\r\n                  <img className=\"coffee_beans_img\" src={coffeeBeans} alt=\"coffee beans\" />\r\n                  <div className=\"right_line\"></div>\r\n                </div>\r\n              </div>\r\n              <p className=\"bold_text item_mb\">\r\n                Ingredients:<span> {filter ? filter[0].ingredients.join(\", \") : null}</span>\r\n              </p>\r\n              <p className=\"item_mb\">\r\n                <span className=\"bold_text\">Description:</span>{\" \"}\r\n                {filter ? filter[0].description : null}\r\n              </p>\r\n              <p className=\"bold_text\">\r\n                Price: <span className=\"item_big_price\"> {filter ? filter[0].price : null}</span>\r\n              </p>\r\n              <button className=\"coffee_item_btn\">Get coffee now</button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CoffeeItemSinglePage;\r\n","export const FetchJson = (setCoffeeItem, setLoading, url = \"./coffee-shop/db.json\") => {\r\n  setLoading(true);\r\n  fetch(url)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.coffeeDrink.length) setCoffeeItem(data.coffeeDrink);\r\n      setLoading(false);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error.message);\r\n      setLoading(false);\r\n    });\r\n  return;\r\n};\r\nexport const FetchCoffeeBeans = (setCoffeeItem, setLoading, url = \"./coffee-shop/db.json\") => {\r\n  setLoading(true);\r\n  fetch(url)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.coffeeBeans.length) setCoffeeItem(data.coffeeBeans);\r\n      setLoading(false);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error.message);\r\n      setLoading(false);\r\n    });\r\n  return;\r\n};\r\n\r\n// export const CoffeeAPI = async (setCoffeeAPI, setLoading) => {\r\n//   await fetch(\"https://api.sampleapis.com/coffee/hot\")\r\n//     .then((response) => response.json())\r\n//     .then((data) => {\r\n//       let res = [];\r\n//       for (let i = 0; i < data.length; i++) {\r\n//         res.push(data[i]);\r\n//       }\r\n//       // before was in //\r\n//       // let delDuplicates = []; // this part to remove duplicates items by using title, not id\r\n//       // for (let i = 0; i < 20; i++) {\r\n//       //   for (let k = 0; k < 20 ; k++) {\r\n//       //     // eslint-disable-next-line no-loop-func\r\n//       //     delDuplicates = res.filter(item => item.title !== res[k].title)\r\n//       //   }\r\n//       // }\r\n//       // delDuplicates.unshift(data[0])\r\n//       // res = delDuplicates\r\n\r\n//       if (res && res.length) setLoading(false);\r\n//       setCoffeeAPI(res);\r\n//     })\r\n//     .catch((error) => {\r\n//       setLoading(false);\r\n//       return console.log(error.message);\r\n//       /* new Error(error) */\r\n//     });\r\n// };\r\n","import '../../assets/sass/style.sass';\r\nimport '../subheaderMain/subheaderMain.sass';\r\n\r\nconst Subheader = ({subheaderBG, subheaderTitle}) => {\r\n  return (\r\n    <section className={subheaderBG}>\r\n      <div className=\"container\">\r\n        <div className=\"subheader_content\">\r\n          <h1 className=\"title\">{subheaderTitle}</h1>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Subheader;"],"names":["selector","visibleLink","className","to","src","Img404","alt","useState","coffeeInServer","setCoffeeInServer","filter","setFilter","loading","setLoading","console","log","getCoffeeItems","FetchJson","url","document","location","pathname","replace","useEffect","filteredCoffee","coffee","id","length","getRightItem","Helmet","name","content","title","Subheader","subheaderBG","subheaderTitle","Spinner","selectorId","image","imgNotFound","onError","error","target","coffeeBeans","ingredients","join","description","price","NotFoundCoffee","setCoffeeItem","fetch","then","response","json","data","coffeeDrink","catch","message","FetchCoffeeBeans"],"sourceRoot":""}